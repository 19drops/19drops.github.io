<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[19 drops]]></title>
  <link href="http://19drops.github.io/atom.xml" rel="self"/>
  <link href="http://19drops.github.io/"/>
  <updated>2014-08-12T23:03:32+02:00</updated>
  <id>http://19drops.github.io/</id>
  <author>
    <name><![CDATA[eae]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Groovy]]></title>
    <link href="http://19drops.github.io/blog/2010/01/20/zappos-y-su-decalogo/"/>
    <updated>2010-01-20T20:33:33+01:00</updated>
    <id>http://19drops.github.io/blog/2010/01/20/zappos-y-su-decalogo</id>
    <content type="html"><![CDATA[<p>Estaba leyendo hoy una noticia sobre <a href="http://www.zappos.com/">Zappos</a>, uno de los mayores sitios de comercio electrónico de USA (recientemente adquirido por Amazon), acerca del cambio de plataforma que han realizado, y he ido a echar un ojo a sus cabeceras a ver si se veía algo por ahí (sip, a veces se ven cosas), y esta vez sí que se veía algo…
Ellos añaden dos cabeceras simpáticas:</p>

<ul>
<li><p><em>X-Core-Value</em>: en la que ponen en cada petición un punto de una especie de decálogo</p></li>
<li><p><em>X-Recruiting</em>: en la que literalmente ponen
“If you’re reading this, maybe you should be working at Zappos instead. Check out jobs.zappos.com”</p></li>
</ul>


<p>Sobre su decálogo:</p>

<ul>
<li>Deliver WOW Through Service</li>
<li>Embrace and Drive Change</li>
<li>Create Fun and A Little Weirdness</li>
<li>Be Adventurous, Creative, and Open-Minded</li>
<li>Pursue Growth and Learning</li>
<li>Build Open and Honest Relationships With Communication</li>
<li>Build a Positive Team and Family Spirit</li>
<li>Do More With Less</li>
<li>Be Passionate and Determined</li>
<li>Be Humble</li>
</ul>


<p>Curioso, y simpático…estos de Zappos…parece que aún queda gente que aprecia el trabajo bien hecho, y además con humor.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy]]></title>
    <link href="http://19drops.github.io/blog/2010/01/20/groovy/"/>
    <updated>2010-01-20T20:33:33+01:00</updated>
    <id>http://19drops.github.io/blog/2010/01/20/groovy</id>
    <content type="html"><![CDATA[<p>En los últimos dos años se ha producido la consolidación de un proceso, que venía fraguándose de un tiempo antes, en el que la JVM ha pasado de ser la máquina virtual en la que se ejecutaba Java a transformarse en una plataforma sobre la que corren un conjunto muy amplio de lenguajes. Esto es interesante fundamentalmente por tres cosas:</p>

<ul>
<li>es posible elegir, de entre todos estos lenguajes, el que mejor se ajuste a las necesidades de cada proyecto en particular</li>
<li>ofrecen una gran integración e interoperabilidad con Java, de modo que su combinación es sencilla pudiendo incluso utilizarlos simultáneamente</li>
<li>aprovechan la infraestructura de JVMs ya existentes en multitud de instalaciones</li>
</ul>


<p>Algunos de los más populares son: <a href="http://www.scala-lang.org/">Scala</a>, considerado uno de los lenguajes del futuro, <a href="http://clojure.org/">Clojure</a>, con un foco especial en la programación concurrente, <a href="http://groovy.codehaus.org/">Groovy</a>, como un superconjunto de Java, Ruby (a través de <a href="http://jruby.org/">JRuby</a>), capaz de ejecutar Rails, PHP (a través de <a href="http://www.caucho.com/resin-3.0/quercus/">Quercus</a>), Javascript (<a href="http://www.mozilla.org/rhino/">Rhino</a>)…</p>

<p>Entre todos ellos, Groovy es uno de los más interesantes para los desarrolladores Java, porque:</p>

<ul>
<li>su sintaxis es muy similar a la de Java, la curva de aprendizaje es baja, no es un lenguaje diferente</li>
<li>ofrece las ventajas de un lenguaje dinámico</li>
<li>extiende el JDK, complementa a Java, simplifica el tratamiento de listas, maps, XML…</li>
<li>proporciona soporte para DSLs</li>
<li>  incorpora flavors de programación funcional (closures)…</li>
</ul>


<p>Pero lo que, desde mi punto de vista, hace a Groovy especialmente relevante para los desarrolladores Java es que dispone de un framework para desarrollo de aplicaciones web, Grails, que podemos decir equivalente en cuanto a funcionalidad, posibilidades y velocidad de desarrollo a Ruby On Rails, con todo lo que ello significa.
Actualmente SpringSource (creadores de Spring) se encarga del desarrollo de <a href="http://www.grails.org/">Grails</a>, y si lo combinamos con su <a href="http://www.cloudfoundry.com/">CloudFoundry</a>, podemos ir haciéndonos una idea de las posibilidades que esto ofrece…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[La Dificultad Del No]]></title>
    <link href="http://19drops.github.io/blog/2009/10/31/la-dificultad-del-no/"/>
    <updated>2009-10-31T20:21:31+01:00</updated>
    <id>http://19drops.github.io/blog/2009/10/31/la-dificultad-del-no</id>
    <content type="html"><![CDATA[<p>En la vida diaria casi todas las personas hacen un esfuerzo por agradar y facilitar
las cosas a los demás: preguntas por una calle, dejas un recado, pides ayuda
para levantar algo… de acuerdo, hay excepciones, pero son las menos.
Es algo que va en la condición humana. Sin embargo, lo que es bueno en el día a día,
no es tan bueno cuando se traslada a otros ámbitos.
Cuando se define un proyecto es de vital importancia mantenerlo dentro de su alcance,
la salida fácil de la completa aquiescencia ante las demandas no contempladas,
no es más que una dilación del problema, que no hará sino agravarse.
La definición de un sistema es algo complejo, no es una mera toma de notas,
en realidad se trata de un proceso de negociación, que debe manejarse de manera flexible
para dar cabida a las cuestiones no previstas inicialmente, pero que deban contemplarse,
y para dar salida a contrapartes equivalentes. En este proceso habrá ocasiones en
las que será necesario decir que no, y, aunque parezca extraño, se estará haciendo
un gran servicio al sistema. Un enfoque simplista del tipo <em>lo ha pedido el cliente</em>,
sin ninguna medida que efectúe un ajuste, introducirá un grave riesgo para
la consecución del éxito final, porque amplificará sin control su alcance.</p>

<p>Alguna vez he leído lo siguiente atribuído a <a href="http://en.wikipedia.org/wiki/Alan_Cox">Alan Cox</a>: “La gente siempre pide más, pero algunas veces lo correcto es decirles simplemente que no“… en este caso mas que no, sería un negociemoslo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Toma La Gallina Y Arréglatelas]]></title>
    <link href="http://19drops.github.io/blog/2009/09/28/toma-la-gallina-y-arreglatelas/"/>
    <updated>2009-09-28T22:56:31+02:00</updated>
    <id>http://19drops.github.io/blog/2009/09/28/toma-la-gallina-y-arreglatelas</id>
    <content type="html"><![CDATA[<p>En una <a href="http://www.imdb.com/title/tt0038777/">Noche en Casablanca</a> llega Groucho Marx a un hotel como nuevo gerente del mismo. Nada más llegar expone sus peculiares puntos de vista sobre como mejorar la gestión del hotel, para lo cuál llama al jefe de cocina y le dice:</p>

<p>  – Jefe, si un cliente pide un huevo en tres minutos, se lo daremos en dos</p>

<p>  – si lo pide en dos, se lo daremos en uno</p>

<p>  – y si nos los pide en uno, le daremos una gallina y que se arregle como pueda</p>

<p>Tras esto, todos se quedan perplejos, la película continúa y hay uno que dice “espero que no se le ocurran más ideas”…</p>

<p>Dejando de lado lo extremo de la situación, y el no menos peculiar estilo de gestión, hay veces en las que se plantean situaciones imposibles que en ocasiones podemos dejar pasar, pero que en la mayor parte de las veces es necesario afrontar para buscar una solución, a pesar de lo difícil y complicado que sea.</p>

<p>En <a href="http://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0201616416">Extreme Programming Explained</a> Kent Beck habla de los Cuatro Valores básicos a tener en cuenta en el desarrollo y gestión de un proyecto. Según él, estos valores, son:</p>

<ul>
<li><p>Comunicación: libertad y confianza</p></li>
<li><p>Simplicidad: escapa de las complicaciones no justificadas, el futuro es impredecible</p></li>
<li><p>Feedback: informa, informa, informa…</p></li>
<li><p>Coraje: decisión para asumir la realidad</p></li>
</ul>


<p>Los tres primeros son evidentes, pero el cuarto es un poco más sutil pero muy importante. El <em>coraje</em> de Beck hace referencia por una parte a la capacidad de reconocer las situaciones en las que existe <em>peligro</em> (porque hemos implementado algo incorrectamente, porque el alcance se nos va de las manos, porque no podemos alcanzar los plazos…), y por otra a la capacidad para plantear la situación con claridad y reconducirla de manera activa hacia una solución.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Revisitando the Mythical Man Month]]></title>
    <link href="http://19drops.github.io/blog/2009/08/08/revisitando-the-mythical-man-month/"/>
    <updated>2009-08-08T21:06:31+02:00</updated>
    <id>http://19drops.github.io/blog/2009/08/08/revisitando-the-mythical-man-month</id>
    <content type="html"><![CDATA[<p>El otro día ordenando un montón de esos papeles que <em>te da pena tirar y no sabes muy bien por qué</em>, encontré unas notas sobre un libro que había leído hace ya algún tiempo. El libro era <a href="http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959">The Mythical Man Month de Frederick Brooks</a>,  y sorprende lo actual que continua siendo a pesar de haber sido publicado hace ya más de 30 años, seguramente porque a pesar de todos los intentos de automatización y mecanización, el proceso de escribir programas…continua siendo eminentemente una actividad creativa.</p>

<p>El libro es un “must-read” para cualquiera que se dedique al desarrollo de software y tiene aunténticas joyas:</p>

<ul>
<li><p>Pregunta: ¿Cómo puede un proyecto retrasarse un año?</p></li>
<li><p>Respuesta: Día tras día</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
